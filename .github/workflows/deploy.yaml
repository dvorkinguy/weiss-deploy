name: myweb

on:
  push:
    branches:
      - weiss-resolved

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up k3d
        run: |
          curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bash
          k3d cluster create myweb

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Deploy Helm Chart
        run: |
          kubectl create namespace myweb
          helm install myweb-release ./Chart-myweb \
            --namespace=myweb \
            -f "${{ github.workspace }}/Chart-myweb/values.yaml"


      - name: Describe Deployment
        run: kubectl describe deployment myweb -n myweb


      - name: Wait for Deployment to be Available
        run: kubectl wait --for=condition=available --timeout=300s deployment/myweb -n myweb

      - name: Get Pod Logs
        run: kubectl logs -l app=myweb -n myweb

      - name: Check Deployment Status
        run: kubectl get deployment myweb -n myweb

      - name: Run Helm Tests
        run: |
          helm test myweb-release

      - name: Verify Deployment
        run: |
          kubectl get pods -n myweb
          sleep 60
          DEPLOYED_MESSAGE=$(kubectl get pods -l app=myweb -o jsonpath="{.items[0].metadata.name}" | xargs -I {} kubectl logs {} | grep "Welcome to Kubernetes")
          echo "Deployed Message: $DEPLOYED_MESSAGE"
          if [ -z "$DEPLOYED_MESSAGE" ]; then
            echo "Error: Deployment does not expose 'Welcome to Kubernetes' message."
            exit 1
          fi

      - name: Tear down k3d cluster
        run: k3d cluster delete myweb
