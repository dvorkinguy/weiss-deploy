name: myweb

on:
  push:
    branches:
      - weiss-resolved

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up k3d
      run: |
        curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bash
        k3d cluster create myweb

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Deploy Helm Chart
      run: |
        helm install myweb-release ./myweb-chart \
          --set deployment.name=myweb \
          --set deployment.replicas=3 \
          --set deployment.containerName=httpd \
          --set deployment.containerImage=httpd \
          --set deployment.cpuRequest=100m \
          --set deployment.memoryRequest=50Mi \
          --set deployment.cpuLimit=200m \
          --set deployment.memoryLimit=100Mi \
          --set deployment.initContainerName=generator \
          --set deployment.initContainerImage=alpine \
          --set deployment.initContainerCommand='{sh,-c,echo "<html> Welcome to Kubernetes </html>" > /docroot/index.html}' \
          --set service.name=myweb-service \
          --set service.selector.app=myweb \
          --set service.port=80 \
          --set service.targetPort=80 \
          --set service.serviceType=NodePort
    
    - name: Run Helm Tests
      run: |
        helm test myweb-release

    - name: Check Deployment Status
      run: kubectl get deployment myweb

    - name: Verify Deployment
      run: |
        kubectl get pods
        kubectl wait --for=condition=available --timeout=180s deployment/myweb
        sleep 10  # Add a delay to ensure the pods are ready
        DEPLOYED_MESSAGE=$(kubectl get pods -l app=myweb -o jsonpath="{.items[0].metadata.name}" | xargs -I {} kubectl logs {} | grep "Welcome to Kubernetes")
        echo "Deployed Message: $DEPLOYED_MESSAGE"
        if [ -z "$DEPLOYED_MESSAGE" ]; then
          echo "Error: Deployment does not expose 'Welcome to Kubernetes' message."
          exit 1
        fi    

    - name: Tear down k3d cluster
      run: k3d cluster delete myweb
